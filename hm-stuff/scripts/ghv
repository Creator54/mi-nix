#!/usr/bin/env bash
# A CLI tool to explore files and directories hosted on GitHub.

# Check if required dependencies (jq, gh, fzf) are available
deps_status=$(which jq gh fzf)
if [[ ! $deps_status ]]; then
	echo "Please make sure jq, gh, and fzf are available in the environment!"
	exit 1
fi

# Function to display file content
function preview() {
	# Retrieve and display file content using gh and jq
	local file_content=$(gh api -X GET "/repos/$owner/$repo/contents/$path" | jq -r '.content' | base64 -d)
	echo "$file_content"
}

# Function to explore GitHub
function explorer() {
	repo_check=$(gh api -X GET /repos/$owner/$repo/contents | jq -r '.[].name' | fzf)

	if [[ -z $repo_check ]]; then
		return
	fi

	if [[ $repo_check == $repo ]]; then
		# Selected entry is the repository itself
		path=""
	else
		path="$repo_check"
	fi

	# Check if the selected entry is a file or a directory
	entry_type=$(gh api -X GET /repos/$owner/$repo/contents/$path | jq -r '.type')

	if [[ $entry_type == "file" ]]; then
		# Display the file content
		preview
	else
		# Recursively explore the selected directory
		explorer
	fi
}


# Read the URL as a command-line argument
url="$1"

# Check if the URL is provided
if [[ -z $url ]]; then
	echo "Please provide a GitHub URL or raw.githubusercontent URL as an argument."
	exit 1
else
	owner=$(echo $url | cut -d '/' -f1)
	repo=$(echo $url| cut -d '/' -f2)
	path=$(echo $url| cut -d '/' -f3)

	if [[ $owner -eq $repo ]]; then
		repo=$(gh api /users/$owner/repos | jq -r '.[].name' | fzf)
		explorer
	fi
fi